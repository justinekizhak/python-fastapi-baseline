from typing import Any, Optional

HANDLED_SIGNALS: Any
logger: Any

class AsyncioServerState:
    total_requests: int = ...
    connections: Any = ...
    tasks: Any = ...
    default_headers: Any = ...
    def __init__(self) -> None: ...

class AsyncioServer:
    config: Any = ...
    server_state: Any = ...
    started: bool = ...
    should_exit: bool = ...
    force_exit: bool = ...
    last_notified: int = ...
    def __init__(self, config: Any) -> None: ...
    def run(self, sockets: Optional[Any] = ...) -> None: ...
    lifespan: Any = ...
    async def serve(self, sockets: Optional[Any] = ...) -> None: ...
    servers: Any = ...
    async def startup(self, sockets: Optional[Any] = ...): ...
    async def main_loop(self) -> None: ...
    async def on_tick(self, counter: Any) -> bool: ...
    async def shutdown(self, sockets: Optional[Any] = ...) -> None: ...
    def install_signal_handlers(self) -> None: ...
    def handle_exit(self, sig: Any, frame: Any) -> None: ...
