[mypy]
files = {{cookiecutter.project_root}}/**/*.py
mypy_path = stubs/

[tox:tox]
envlist = clean, py38, report
isolated_build = True
skip_missing_interpreters = True

[testenv]
deps =
    pytest
    pytest-cov
    pytest-mock
commands =
    pytest -s -vv --cov --cov-append --cov-report=term-missing

[testenv:clean]
deps = coverage
skip_install = true
commands = coverage erase

[testenv:check]
description = linting and type checking the code
basepython = python3.8
deps =
     pylint
     flake8
     mypy
whitelist_externals = mypy
commands =
    pylint {{cookiecutter.project_root}}
    flake8 {{cookiecutter.project_root}}
    mypy


# coverage config
[coverage:run]
branch = True
omit =
    */.local/*
    */tests/*
    */virtualenvs/*
    */.tox/*
command_line =
    -m pytest -vv

[coverage:paths]
source =
    app/

[coverage:report]
# Regexes for lines to exclude from consideration
exclude_lines =
    # Have to re-enable the standard pragma
    pragma: no cover

    # Don't complain about missing debug-only code:
    def __repr__
    if self\.debug

    # Don't complain if tests don't hit defensive assertion code:
    raise AssertionError
    raise NotImplementedError

    # Don't complain if non-runnable code isn't run:
    if 0:
    if __name__ == .__main__.:

ignore_errors = True

[flake8]
ignore = E203, E302, E501, E999
max-line-length = 88
max-complexity = 12
select = B,C,E,F,W,B9

[pylint.MESSAGES CONTROL]
disable=
    C0330, C0301

[isort]
profile=black

# [tool:pytest]
# addopts = -vv

[pytest-watch]
nobeep = True
